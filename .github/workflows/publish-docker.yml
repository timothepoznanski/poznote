name: Publish Docker image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Get next version
        id: version
        run: |
          # Get the latest tag, or default to v1.0.0 if no tags exist
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v1.0.0")
          echo "Latest tag: $latest_tag"
          
          # Extract version number (remove 'v' prefix)
          version=$(echo $latest_tag | sed 's/v//')
          
          # Parse semantic version
          IFS='.' read -r major minor patch <<< "$version"
          
          # Increment patch version
          new_patch=$((patch + 1))
          new_version="v$major.$minor.$new_patch"
          
          echo "New version: $new_version"
          echo "version=$new_version" >> $GITHUB_OUTPUT
          echo "version_clean=$major.$minor.$new_patch" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git tag ${{ steps.version.outputs.version }}
          git push origin ${{ steps.version.outputs.version }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/poznote:${{ steps.version.outputs.version_clean }}
            ghcr.io/${{ github.repository_owner }}/poznote:latest

